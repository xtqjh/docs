(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{495:function(e,n,s){"use strict";s.r(n);var t=s(42),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"请求的链式处理-职责链模式-三"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求的链式处理-职责链模式-三"}},[e._v("#")]),e._v(" 请求的链式处理——职责链模式（三）")]),e._v(" "),s("p",[e._v("16.3 完整解决方案\n为了让采购单的审批流程更加灵活，并实现采购单的链式传递和处理，Sunny公司开发人员使用职责链模式来实现采购单的分级审批，其基本结构如图16-3所示：")]),e._v(" "),s("p",[s("img",{attrs:{src:"http://my.csdn.net/uploads/201204/02/1333307860_9326.gif",alt:""}})]),e._v(" "),s("p",[e._v("在图16-3中，抽象类Approver充当抽象处理者（抽象传递者），Director、VicePresident、President和Congress充当具体处理者（具体传递者），PurchaseRequest充当请求类。完整代码如下所示：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('//采购单：请求类  \nclass PurchaseRequest {  \n    private double amount;  //采购金额  \n    private int number;  //采购单编号  \n    private String purpose;  //采购目的  \n      \n    public PurchaseRequest(double amount, int number, String purpose) {  \n        this.amount = amount;  \n        this.number = number;  \n        this.purpose = purpose;  \n    }  \n      \n    public void setAmount(double amount) {  \n        this.amount = amount;  \n    }  \n      \n    public double getAmount() {  \n        return this.amount;  \n    }  \n      \n    public void setNumber(int number) {  \n        this.number = number;  \n    }  \n      \n    public int getNumber() {  \n        return this.number;  \n    }  \n      \n    public void setPurpose(String purpose) {  \n        this.purpose = purpose;  \n    }  \n      \n    public String getPurpose() {  \n        return this.purpose;  \n    }  \n}  \n  \n//审批者类：抽象处理者  \nabstract class Approver {  \n    protected Approver successor; //定义后继对象  \n    protected String name; //审批者姓名  \n      \n    public Approver(String name) {  \n        this.name = name;  \n    }  \n  \n    //设置后继者  \n    public void setSuccessor(Approver successor) {   \n        this.successor = successor;  \n    }  \n  \n    //抽象请求处理方法  \n    public abstract void processRequest(PurchaseRequest request);  \n}  \n  \n//主任类：具体处理者  \nclass Director extends Approver {  \n    public Director(String name) {  \n        super(name);  \n    }  \n      \n    //具体请求处理方法  \n    public void processRequest(PurchaseRequest request) {  \n        if (request.getAmount() < 50000) {  \n            System.out.println("主任" + this.name + "审批采购单：" + request.getNumber() + "，金额：" + request.getAmount() + "元，采购目的：" + request.getPurpose() + "。");  //处理请求  \n        }  \n        else {  \n            this.successor.processRequest(request);  //转发请求  \n        }     \n    }  \n}  \n  \n//副董事长类：具体处理者  \nclass VicePresident extends Approver {  \n    public VicePresident(String name) {  \n        super(name);  \n    }  \n      \n    //具体请求处理方法  \n    public void processRequest(PurchaseRequest request) {  \n        if (request.getAmount() < 100000) {  \n            System.out.println("副董事长" + this.name + "审批采购单：" + request.getNumber() + "，金额：" + request.getAmount() + "元，采购目的：" + request.getPurpose() + "。");  //处理请求  \n        }  \n        else {  \n            this.successor.processRequest(request);  //转发请求  \n        }     \n    }  \n}  \n  \n//董事长类：具体处理者  \nclass President extends Approver {  \n    public President(String name) {  \n        super(name);  \n    }  \n      \n    //具体请求处理方法  \n    public void processRequest(PurchaseRequest request) {  \n        if (request.getAmount() < 500000) {  \n            System.out.println("董事长" + this.name + "审批采购单：" + request.getNumber() + "，金额：" + request.getAmount() + "元，采购目的：" + request.getPurpose() + "。");  //处理请求  \n        }  \n        else {  \n            this.successor.processRequest(request);  //转发请求  \n        }  \n    }  \n}  \n  \n//董事会类：具体处理者  \nclass Congress extends Approver {  \n    public Congress(String name) {  \n        super(name);  \n    }  \n      \n    //具体请求处理方法  \n    public void processRequest(PurchaseRequest request) {  \n        System.out.println("召开董事会审批采购单：" + request.getNumber() + "，金额：" + request.getAmount() + "元，采购目的：" + request.getPurpose() + "。");        //处理请求  \n    }      \n}  \n')])])]),s("p",[e._v("编写如下客户端测试代码：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('class Client {  \n    public static void main(String[] args) {  \n        Approver wjzhang,gyang,jguo,meeting;  \n        wjzhang = new Director("张无忌");  \n        gyang = new VicePresident("杨过");  \n        jguo = new President("郭靖");  \n        meeting = new Congress("董事会");  \n      \n        //创建职责链  \n        wjzhang.setSuccessor(gyang);  \n        gyang.setSuccessor(jguo);  \n        jguo.setSuccessor(meeting);  \n          \n        //创建采购单  \n        PurchaseRequest pr1 = new PurchaseRequest(45000,10001,"购买倚天剑");  \n        wjzhang.processRequest(pr1);  \n          \n        PurchaseRequest pr2 = new PurchaseRequest(60000,10002,"购买《葵花宝典》");  \n        wjzhang.processRequest(pr2);  \n      \n        PurchaseRequest pr3 = new PurchaseRequest(160000,10003,"购买《金刚经》");  \n        wjzhang.processRequest(pr3);  \n  \n        PurchaseRequest pr4 = new PurchaseRequest(800000,10004,"购买桃花岛");  \n        wjzhang.processRequest(pr4);  \n    }  \n}   \n')])])]),s("p",[e._v("编译并运行程序，输出结果如下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("主任张无忌审批采购单：10001，金额：45000.0元，采购目的：购买倚天剑。\n副董事长杨过审批采购单：10002，金额：60000.0元，采购目的：购买《葵花宝典》。\n董事长郭靖审批采购单：10003，金额：160000.0元，采购目的：购买《金刚经》。\n召开董事会审批采购单：10004，金额：800000.0元，采购目的：购买桃花岛。\n")])])]),s("p",[e._v("如果需要在系统增加一个新的具体处理者，如增加一个经理(Manager)角色可以审批5万元至8万元（不包括8万元）的采购单，需要编写一个新的具体处理者类Manager，作为抽象处理者类Approver的子类，实现在Approver类中定义的抽象处理方法，如果采购金额大于等于8万元，则将请求转发给下家，代码如下所示：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('//经理类：具体处理者  \nclass Manager extends Approver {  \n    public Manager(String name) {  \n        super(name);  \n    }  \n      \n    //具体请求处理方法  \n    public void processRequest(PurchaseRequest request) {  \n        if (request.getAmount() < 80000) {  \n            System.out.println("经理" + this.name + "审批采购单：" + request.getNumber() + "，金额：" + request.getAmount() + "元，采购目的：" + request.getPurpose() + "。");  //处理请求  \n        }  \n        else {  \n            this.successor.processRequest(request);  //转发请求  \n        }     \n    }  \n}  \n')])])]),s("p",[e._v("由于链的创建过程由客户端负责，因此增加新的具体处理者类对原有类库无任何影响，无须修改已有类的源代码，符合“开闭原则”。")]),e._v(" "),s("p",[e._v("在客户端代码中，如果要将新的具体请求处理者应用在系统中，需要创建新的具体处理者对象，然后将该对象加入职责链中。如在客户端测试代码中增加如下代码：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('Approver rhuang;  \nrhuang = new Manager("黄蓉");  \n')])])]),s("p",[e._v("将建链代码改为：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//创建职责链  \n\n")])])]),s("p",[e._v("wjzhang.setSuccessor(rhuang); //将“黄蓉”作为“张无忌”的下家"),s("br"),e._v("\nrhuang.setSuccessor(gyang); //将“杨过”作为“黄蓉”的下家"),s("br"),e._v("\ngyang.setSuccessor(jguo);"),s("br"),e._v("\njguo.setSuccessor(meeting);")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n重新编译并运行程序，输出结果如下：\n\n")])])]),s("p",[e._v("主任张无忌审批采购单：10001，金额：45000.0元，采购目的：购买倚天剑。\n经理黄蓉审批采购单：10002，金额：60000.0元，采购目的：购买《葵花宝典》。\n董事长郭靖审批采购单：10003，金额：160000.0元，采购目的：购买《金刚经》。\n召开董事会审批采购单：10004，金额：800000.0元，采购目的：购买桃花岛。")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" \n思考\n\n> 如果将审批流程由“主任--\x3e副董事长--\x3e董事长--\x3e董事会”调整为“主任--\x3e董事长--\x3e董事会”，系统将做出哪些改动？预测修改之后客户端代码的输出结果。\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);